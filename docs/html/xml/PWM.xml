<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="PWM" name="PWM" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> Pulse Wide Modulation class</brief>
  <doc>To turn on/off the power, as well as all intermediate stages, for example with dimming, the PWM class is used.
</doc>
  <field id="PWM::_numChannels" name="_numChannels">
    <brief>number of channels</brief>
    <type name="uint8_t" />
  </field>
  <field id="PWM::_maxValue" name="_maxValue">
    <type name="uint16_t" />
  </field>
  <field id="PWM::_nextValue" name="_nextValue">
    <type size="3">
      <type name="uint16_t" />
    </type>
  </field>
  <field id="PWM::_gpioteChannel" name="_gpioteChannel">
    <type size="3">
      <type name="uint8_t" />
    </type>
  </field>
  <field id="PWM::_gpioPin" name="_gpioPin">
    <type size="3">
      <type name="uint8_t" />
    </type>
  </field>
  <field id="PWM::_running" name="_running">
    <type size="3">
      <type builtin="yes" name="bool" />
    </type>
  </field>
  <method id="PWM::getInstance" name="getInstance" static="yes">
    <brief>Gets a static singleton (no dynamic memory allocation) of the PWM clss</brief>
    <return>
      <type name="PWM" qualifier=" &amp;" ref="PWM#PWM" />
    </return>
  </method>
  <method abstract="yes" id="PWM::getValue" name="getValue">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PWM::getValue::pwm_channel" name="pwm_channel">
      <type name="uint8_t" qualifier=" &amp;" />
    </argument>
    <argument id="PWM::getValue::pwm_value" name="pwm_value">
      <type name="uint32_t" qualifier=" &amp;" />
    </argument>
  </method>
  <method abstract="yes" id="PWM::init" name="init">
    <brief>Initialize the pulse wide modulation settings</brief>
    <return>
      <type name="uint32_t" />
    </return>
    <argument id="PWM::init::config" name="config">
      <type name="pwm_config_t" qualifier="*" ref="pwm_config_t#pwm_config_t" />
    </argument>
  </method>
  <method abstract="yes" id="PWM::setValue" name="setValue">
    <brief>Set the value of a specific channel</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PWM::setValue::pwm_channel" name="pwm_channel">
      <type name="uint8_t" />
    </argument>
    <argument id="PWM::setValue::pwm_value" name="pwm_value">
      <type name="uint32_t" />
    </argument>
  </method>
</class>
