(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['bus_screen_tall_96_simple'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\r\n	    ";
  stack1 = helpers.each.call(depth0, depth0.arrival, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n    ";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\r\n	    <g> <!-- bus ";
  if (stack1 = helpers.index) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.index; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " -->\r\n	        <text x=\"96\" y=\"";
  if (stack1 = helpers.y_text) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.y_text; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" class=\"t28r b\">";
  if (stack1 = helpers.time) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.time; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</text>\r\n	        <use x=\"6.5\" y=\"";
  if (stack1 = helpers.y_icon) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.y_icon; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" xlink:href=\"#";
  if (stack1 = helpers.icon) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.icon; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"/>\r\n	    </g>\r\n	    ";
  return buffer;
  }

function program4(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\r\n	    <g><!-- weather -->\r\n	        <use x=\"0\" y=\"149\" xlink:href =\"#";
  if (stack1 = helpers.icon) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.icon; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"/> <text x=\"7\" y=\"188\" class=\"t16\">";
  if (stack1 = helpers.percip_prob) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.percip_prob; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</text>\r\n	        <use x=\"49.5\" y=\"156.5\" xlink:href=\"#uptri\"/> <text x=\"96\" y=\"169\" class=\"t28r\">";
  if (stack1 = helpers.high_temp) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.high_temp; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "°</text>\r\n	        <use x=\"50\" y=\"177.5\" xlink:href=\"#therm\"/> <text x=\"96\" y=\"196\" class=\"t28r\">";
  if (stack1 = helpers.current_temp) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.current_temp; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "°</text>\r\n	    </g>\r\n	";
  return buffer;
  }

  buffer += "<svg version=\"1.1\" viewBox=\"0 0 96 200\" height=\"200\" width=\"96\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <defs>\r\n        <style type=\"text/css\">\r\n            text {font-family: 'Myriad Web Pro'; }\r\n            text.b { font-family: 'Myriad Web Pro'; font-weight:bold; }\r\n            .t36 { font-size: 36px; }\r\n            .t28 { font-size: 28px; }\r\n            .t28r { font-size: 28px; text-anchor:end; }\r\n            .t18 { font-size: 18px; }\r\n            .t16 { font-size: 16px; }\r\n            .c { text-anchor: middle;}\r\n        </style>\r\n        <symbol id=\"out_the_door\">\r\n            <polyline fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" points=\"13.9,21 13.9,24.5 3,24.5 3,1 13.9,1 13.9,7 \"/>\r\n            <polygon points=\"11.9,19 20.9,14.5 11.9,10 \"/>\r\n            <polyline points=\"6.9,16 6.9,13 13.9,13 13.9,16 \"/>\r\n        </symbol>\r\n        <symbol id=\"bus\">\r\n            <path d=\"M0,2.2c0,0,9-5,17,0v16h-1v4h-2v-4H3v4H1v-4H0V2.2z\"/>\r\n            <rect x=\"3\" y=\"4.2\" fill=\"#FFFFFF\" width=\"11\" height=\"5\"/>\r\n            <rect x=\"3\" y=\"13.5\" fill=\"#FFFFFF\" width=\"2\" height=\"2\"/>\r\n            <rect x=\"12\" y=\"13.5\" fill=\"#FFFFFF\" width=\"2\" height=\"2\"/>\r\n        </symbol>\r\n\r\n        <symbol id=\"clear-day\">\r\n            <path d=\"M41.3,21c0,0.9-0.7,1.7-1.7,1.7h-3.3c-0.9,0-1.7-0.7-1.7-1.7v0c0-0.9,0.7-1.7,1.7-1.7h3.3C40.6,19.3,41.3,20.1,41.3,21 L41.3,21z\"/>\r\n            <path d=\"M6.7,21c0,0.9-0.7,1.7-1.7,1.7H1.7C0.7,22.7,0,21.9,0,21v0c0-0.9,0.7-1.7,1.7-1.7H5C5.9,19.3,6.7,20.1,6.7,21L6.7,21z\"/>\r\n            <path d=\"M20.3,35c0.9,0,1.7,0.7,1.7,1.7V40c0,0.9-0.7,1.7-1.7,1.7h0c-0.9,0-1.7-0.7-1.7-1.7v-3.3C18.7,35.7,19.4,35,20.3,35 L20.3,35z\"/>\r\n            <path d=\"M21,0c0.9,0,1.7,0.7,1.7,1.7V5c0,0.9-0.7,1.7-1.7,1.7h0c-0.9,0-1.7-0.7-1.7-1.7V1.7C19.3,0.7,20.1,0,21,0L21,0z\"/>\r\n            <path d=\"M5,4.3c0.6-0.6,1.7-0.6,2.3,0l2.4,2.4c0.6,0.6,0.6,1.7,0,2.3l0,0C9,9.7,8,9.7,7.3,9L5,6.7C4.3,6,4.3,5,5,4.3L5,4.3z\"/>\r\n            <path d=\"M31.5,31.5c0.6-0.6,1.7-0.6,2.3,0l2.4,2.4c0.6,0.6,0.6,1.7,0,2.3l0,0c-0.6,0.6-1.7,0.6-2.3,0l-2.4-2.4 C30.8,33.2,30.8,32.1,31.5,31.5L31.5,31.5z\"/>\r\n            <path d=\"M4.6,35.9c-0.6-0.6-0.6-1.7,0-2.3L7,31.1c0.6-0.6,1.7-0.6,2.3,0l0,0c0.6,0.6,0.6,1.7,0,2.3L7,35.9 C6.3,36.5,5.3,36.5,4.6,35.9L4.6,35.9z\"/>\r\n            <path d=\"M31.8,9.4c-0.6-0.6-0.6-1.7,0-2.3l2.4-2.4c0.6-0.6,1.7-0.6,2.3,0l0,0c0.6,0.6,0.6,1.7,0,2.3l-2.4,2.4 C33.5,10,32.5,10,31.8,9.4L31.8,9.4z\"/>\r\n            <circle cx=\"21\" cy=\"20\" r=\"10\"/>\r\n            <circle fill=\"#FFFFFF\" cx=\"20.9\" cy=\"20.3\" r=\"6.2\"/>\r\n        </symbol>\r\n        <symbol id=\"clear-night\">\r\n            <path d=\"M20.001,40C8.955,40,0,31.045,0,20.001C0,8.955,8.955,0,20.001,0c1.259,0,2.485,0.13,3.679,0.354\r\n                c-0.22,0.96-0.347,1.955-0.347,2.979c0,7.365,5.971,13.334,13.335,13.334c1.023,0,2.02-0.127,2.98-0.347\r\n                C39.869,17.515,40,18.74,40,20.001C40,31.045,31.045,40,20.001,40z M17.021,7.013C11.093,8.367,6.667,13.66,6.667,20.001\r\n                c0,7.362,5.969,13.333,13.333,13.333c6.337,0,11.632-4.426,12.986-10.354C24.896,21.474,18.526,15.103,17.021,7.013z\"/>\r\n        </symbol>\r\n        <symbol id=\"rain\">\r\n            <path d=\"M40,20.699c-0.034-5.003-1.783-9.723-4.925-13.297c-3.28-3.729-7.679-5.785-12.382-5.785\r\n				c-3.853,0-7.497,1.372-10.539,3.966c-2.274,1.939-4.05,4.428-5.218,7.283c-1.533,0.491-2.935,1.353-4.089,2.534\r\n				C1.012,17.277,0,19.76,0,22.388c0,5.515,4.485,9.999,9.999,9.999h18.463C34.824,32.387,40,27.211,40,20.848\r\n				C40,20.8,40,20.748,40,20.699z M28.462,28.541L28.462,28.541H10c-3.399,0-6.154-2.756-6.154-6.152c0-3.348,2.673-6.067,6.001-6.15\r\n				c1.714-6.243,6.816-10.772,12.846-10.772c7.41,0,13.42,6.843,13.459,15.301c0.002,0.026,0.002,0.056,0.002,0.084\r\n				C36.154,25.096,32.71,28.541,28.462,28.541z\"/>\r\n		            <path d=\"M19.321,34.513c-0.949-0.476-2.105-0.09-2.579,0.86l-3.846,7.693c-0.475,0.949-0.09,2.104,0.859,2.58\r\n				c0.277,0.138,0.568,0.203,0.858,0.203c0.706,0,1.386-0.39,1.723-1.064l3.847-7.69C20.658,36.144,20.273,34.989,19.321,34.513z\"/>\r\n		            <path d=\"M26.984,34.5c-0.959-0.459-2.108-0.055-2.565,0.902l-1.538,3.211c-0.459,0.958-0.055,2.106,0.903,2.566\r\n				c0.269,0.127,0.552,0.188,0.829,0.188c0.718,0,1.406-0.401,1.736-1.092l1.539-3.211C28.35,36.107,27.943,34.959,26.984,34.5z\"/>\r\n		            <path d=\"M11.6,34.5c-0.956-0.459-2.105-0.055-2.565,0.902l-1.537,3.211c-0.46,0.958-0.055,2.106,0.903,2.566\r\n				c0.269,0.127,0.552,0.188,0.829,0.188c0.718,0,1.405-0.401,1.735-1.092l1.539-3.211C12.962,36.107,12.559,34.959,11.6,34.5z\"/>        </symbol>\r\n        <symbol id=\"snow\">\r\n            <path d=\"M34.772,32.546V28.37c3.526-0.91,6.138-4.104,6.138-7.915c0-4.517-3.664-8.181-8.183-8.181c-1.638,0-3.154,0.49-4.433,1.32\r\n				c-1.26-5.438-6.11-9.503-11.931-9.503C9.585,4.092,4.09,9.587,4.09,16.366c0,4.538,2.472,8.494,6.136,10.616v4.546\r\n				C4.233,29.099,0,23.23,0,16.364C0,7.328,7.326,0,16.364,0c6.141,0,11.486,3.388,14.285,8.391c0.679-0.116,1.366-0.21,2.079-0.21\r\n				C39.505,8.181,45,13.677,45,20.453C45,26.536,40.574,31.569,34.772,32.546z M15.414,26.593c0.565-0.979,1.816-1.312,2.795-0.748\r\n				l2.246,1.295v-2.593c0-1.129,0.917-2.046,2.046-2.046c1.129,0,2.046,0.917,2.046,2.046v2.593l2.245-1.296\r\n				c0.979-0.563,2.23-0.23,2.793,0.749c0.565,0.979,0.23,2.229-0.747,2.794l-2.247,1.297l2.247,1.297\r\n				c0.978,0.565,1.312,1.816,0.747,2.795c-0.564,0.977-1.814,1.312-2.793,0.746l-2.245-1.296v2.594c0,1.131-0.917,2.046-2.046,2.046\r\n				c-1.129,0-2.046-0.915-2.046-2.046v-2.594l-2.245,1.298c-0.979,0.565-2.23,0.23-2.794-0.746c-0.565-0.979-0.23-2.23,0.749-2.795\r\n				l2.245-1.299l-2.245-1.296C15.185,28.822,14.85,27.571,15.414,26.593z M22.5,32.729c1.129,0,2.046-0.916,2.046-2.046\r\n				s-0.917-2.045-2.046-2.045c-1.129,0-2.046,0.915-2.046,2.045C20.454,31.812,21.371,32.729,22.5,32.729z\"/>\r\n        </symbol>\r\n        <symbol id=\"sleet\">\r\n            <path d=\"M36.819,32.014v-4.48c2.44-1.418,4.089-4.052,4.089-7.078c0-4.519-3.662-8.183-8.181-8.183c-1.64,0-3.154,0.491-4.433,1.32\r\n				c-1.261-5.438-6.11-9.503-11.931-9.503c-6.778,0-12.272,5.495-12.272,12.273c0,3.63,1.585,6.883,4.089,9.13v5.026\r\n				C3.295,27.688,0,22.417,0,16.363C0,7.326,7.326,0,16.364,0c6.142,0,11.486,3.387,14.285,8.391c0.679-0.116,1.366-0.21,2.079-0.21\r\n				C39.506,8.181,45,13.677,45,20.455C45,25.795,41.582,30.328,36.819,32.014z M14.318,20.455c1.129,0,2.046,0.916,2.046,2.046v4.089\r\n				c0,1.131-0.917,2.046-2.046,2.046c-1.13,0-2.045-0.915-2.045-2.046v-4.089C12.272,21.37,13.188,20.455,14.318,20.455z\r\n				 M14.318,32.728c1.129,0,2.046,0.916,2.046,2.046v4.089c0,1.131-0.917,2.046-2.046,2.046c-1.13,0-2.045-0.915-2.045-2.046v-4.089\r\n				C12.272,33.643,13.188,32.728,14.318,32.728z M22.499,24.545c1.13,0,2.046,0.917,2.046,2.045v4.092c0,1.13-0.916,2.046-2.046,2.046\r\n				c-1.129,0-2.043-0.916-2.043-2.046V26.59C20.455,25.462,21.371,24.545,22.499,24.545z M22.499,36.818\r\n				c1.13,0,2.046,0.916,2.046,2.044v4.092c0,1.131-0.916,2.046-2.046,2.046c-1.129,0-2.043-0.915-2.043-2.046v-4.092\r\n				C20.455,37.733,21.371,36.818,22.499,36.818z M30.682,20.455c1.129,0,2.046,0.916,2.046,2.046v4.089\r\n				c0,1.131-0.917,2.046-2.046,2.046c-1.131,0-2.045-0.915-2.045-2.046v-4.089C28.637,21.37,29.551,20.455,30.682,20.455z\r\n				 M30.682,32.728c1.129,0,2.046,0.916,2.046,2.046v4.089c0,1.131-0.917,2.046-2.046,2.046c-1.131,0-2.045-0.915-2.045-2.046v-4.089\r\n				C28.637,33.643,29.551,32.728,30.682,32.728z\"/>\r\n        </symbol>\r\n        <symbol id=\"wind\">\r\n            <path d=\"M40.624,29.956v0.043H40h-2.5c-0.921,0-1.667-0.746-1.667-1.667c0-0.92,0.746-1.665,1.667-1.665H40\r\n				c0.921,0,1.666-0.747,1.666-1.667c0-0.921-0.745-1.667-1.666-1.667c-0.92,0-1.666-0.746-1.666-1.667S39.08,19.999,40,19.999\r\n				c0.115,0,0.228,0.012,0.335,0.034C42.938,20.209,45,22.353,45,25C45,27.548,43.091,29.647,40.624,29.956z M31.666,19.999\r\n				c-0.919,0-1.666-0.746-1.666-1.667c0-0.92,0.747-1.667,1.666-1.667c0.116,0,0.227,0.012,0.336,0.034\r\n				c2.602,0.176,4.664,2.32,4.664,4.967c0,2.55-1.909,4.648-4.375,4.957v0.044h-0.625h-6.654c-3.344,0-9.467,0-11.679,0\r\n				c-0.92,0-1.667,0.746-1.667,1.665c0,0.921,0.747,1.667,1.667,1.667h18.333h0.625v0.044c2.466,0.308,4.375,2.408,4.375,4.956\r\n				c0,2.647-2.062,4.79-4.664,4.967C31.893,39.987,31.781,40,31.666,40C30.747,40,30,39.253,30,38.333c0-0.921,0.747-1.667,1.666-1.667\r\n				c0.92,0,1.668-0.746,1.668-1.667c0-0.92-0.748-1.667-1.668-1.667H13.333h-0.625v-0.043c-2.466-0.309-4.376-2.408-4.376-4.957\r\n				c0-0.879,0.245-1.693,0.645-2.408C3.755,24.116,0,19.169,0,13.333C0,5.969,5.969,0,13.333,0c5.004,0,9.359,2.76,11.639,6.837\r\n				c0.554-0.095,1.114-0.171,1.695-0.171c4.913,0,8.991,3.547,9.833,8.22c-1.162-0.83-2.543-1.372-4.041-1.514\r\n				c-1.148-2.014-3.311-3.373-5.792-3.373c-1.334,0-2.57,0.401-3.612,1.076c-1.026-4.431-4.978-7.743-9.721-7.743\r\n				c-5.523,0-10,4.479-10,10.001c0,5.521,4.477,10,10,10c2.166,0,6.793,0,10.167,0h8.166c0.92,0,1.668-0.746,1.668-1.667\r\n				C33.334,20.744,32.588,19.999,31.666,19.999z\"/>\r\n        </symbol>\r\n        <symbol id=\"fog\">\r\n            <path d=\"M1.174,21.996c-0.262-0.645-0.473-1.314-0.648-2h43.47c0,0.686-0.069,1.35-0.181,2H1.174z M8.26,1.999\r\n				C10.554,0.729,13.19,0,15.998,0c2.806,0,5.436,0.73,7.728,1.999H8.26z M0.139,13.998c0.085-0.682,0.218-1.348,0.387-1.999h40.396\r\n				c0.552,0.612,1.039,1.28,1.455,1.999H0.139z M1.174,9.999c0.281-0.692,0.613-1.358,0.984-2H29.84\r\n				c0.04,0.067,0.084,0.135,0.123,0.205c0.664-0.114,1.339-0.205,2.033-0.205c2.451,0,4.729,0.737,6.627,2H1.174z M3.521,5.999\r\n				c0.58-0.724,1.225-1.388,1.92-2h21.123c0.689,0.61,1.326,1.28,1.902,2H3.521z M43.813,17.996H0.139C0.057,17.34,0,16.676,0,15.998\r\n				h43.298C43.524,16.641,43.699,17.309,43.813,17.996z M43.298,23.996c-0.246,0.699-0.555,1.367-0.921,2H3.521\r\n				c-0.505-0.629-0.957-1.299-1.363-2H43.298z M5.441,27.996h35.48c-0.68,0.758-1.447,1.436-2.299,2H8.26\r\n				C7.244,29.434,6.306,28.756,5.441,27.996z\"/>\r\n        </symbol>\r\n        <symbol id=\"cloudy\">\r\n            <path d=\"M15.998,31.996C7.163,31.996,0,24.834,0,15.998S7.163,0,15.998,0c6.004,0,11.229,3.312,13.965,8.203\r\n	            c0.664-0.113,1.338-0.205,2.033-0.205c6.627,0,11.998,5.373,11.998,12c0,6.625-5.371,11.998-11.998,11.998\r\n	            C29.221,31.996,19.196,31.996,15.998,31.996z M31.996,27.996c4.418,0,8-3.582,8-7.998c0-4.418-3.582-8-8-8\r\n	            c-1.6,0-3.082,0.481-4.334,1.291C26.432,7.974,21.689,4,15.998,4C9.372,4,4,9.371,4,15.998s5.372,11.998,11.998,11.998\r\n	            C19.615,27.996,28.977,27.996,31.996,27.996z\"/>\r\n        </symbol>\r\n        <symbol id=\"partly-cloudy-day\">\r\n            <path d=\"M48.75,24.374h-3.751c-1.035,0-1.875-0.839-1.875-1.875c0-1.034,0.84-1.873,1.875-1.873h3.751\r\n            	c1.034,0,1.875,0.839,1.875,1.873C50.625,23.535,49.784,24.374,48.75,24.374z M41.383,11.894c-0.732,0.731-1.92,0.731-2.652,0\r\n            	s-0.732-1.92,0-2.651l2.652-2.651c0.732-0.732,1.919-0.732,2.651,0c0.732,0.731,0.732,1.919,0,2.651L41.383,11.894z M38.619,26.526\r\n            	L38.619,26.526c1.641,1.955,2.631,4.473,2.631,7.224C41.25,39.962,36.213,45,30,45c-2.602,0-12.002,0-15,0C6.716,45,0,38.285,0,30\r\n            	s6.716-15,15-15c1.474,0,2.897,0.218,4.241,0.613c2.058-2.649,5.268-4.363,8.883-4.363c6.214,0,11.251,5.037,11.251,11.249\r\n            	C39.373,23.92,39.1,25.275,38.619,26.526z M3.75,30c0,6.214,5.036,11.25,11.25,11.25c3.391,0,12.169,0,15.001,0\r\n            	c4.142,0,7.498-3.359,7.498-7.5c0-4.142-3.356-7.5-7.498-7.5c-1.502,0-2.893,0.452-4.064,1.21c-1.153-4.983-5.601-8.71-10.937-8.71\r\n            	C8.785,18.75,3.75,23.786,3.75,30z M28.124,15c-2.075,0-3.952,0.843-5.309,2.203c2.194,1.346,4.018,3.237,5.277,5.488\r\n            	c0.623-0.106,1.254-0.192,1.907-0.192c1.992,0,3.861,0.524,5.484,1.432l0,0c0.09-0.463,0.141-0.94,0.141-1.432\r\n            	C35.625,18.358,32.267,15,28.124,15z M28.124,7.499c-1.036,0-1.875-0.839-1.875-1.873V1.875C26.249,0.84,27.09,0,28.124,0\r\n            	C29.16,0,30,0.84,30,1.875v3.751C30,6.661,29.16,7.499,28.124,7.499z M14.866,11.894l-2.651-2.651c-0.732-0.732-0.732-1.92,0-2.651\r\n            	c0.731-0.732,1.919-0.732,2.651,0l2.651,2.651c0.733,0.731,0.733,1.92,0,2.651C16.786,12.625,15.598,12.625,14.866,11.894z\"/>\r\n        </symbol>\r\n	    <symbol id=\"partly-cloudy-night\">\r\n            <path d=\"M43.322,25.615L43.322,25.615c1.367,1.949,2.178,4.318,2.178,6.883c0,6.625-5.371,11.998-11.998,11.998\r\n				c-2.774,0-12.8,0-15.998,0c-8.836,0-15.998-7.162-15.998-15.998S8.668,12.5,17.504,12.5c2.002,0,3.914,0.375,5.68,1.047l0,0\r\n				C24.82,8.865,29.263,5.5,34.502,5.5c0.756,0,1.492,0.078,2.207,0.213c-0.131,0.574-0.207,1.172-0.207,1.787c0,4.418,3.582,8,7.998,8\r\n				c0.617,0,1.213-0.076,1.789-0.209c0.134,0.717,0.211,1.453,0.211,2.209C46.5,20.633,45.289,23.479,43.322,25.615z M5.505,28.498\r\n				c0,6.627,5.371,11.998,11.998,11.998c3.616,0,12.979,0,15.999,0c4.418,0,7.998-3.582,7.998-7.998c0-4.418-3.58-8-7.998-8\r\n				c-1.601,0-3.084,0.482-4.334,1.291c-1.231-5.315-5.973-9.289-11.665-9.289C10.876,16.5,5.505,21.871,5.505,28.498z M25.055,14.402\r\n				c0.001,0,0.002,0,0.002,0S25.056,14.402,25.055,14.402z M32.713,9.707c-2.899,0.664-5.174,2.91-5.924,5.775l0,0\r\n				c1.918,1.372,3.522,3.152,4.68,5.221c0.664-0.113,1.337-0.205,2.033-0.205c2.617,0,5.033,0.85,7.005,2.271l0,0\r\n				c0.858-0.979,1.485-2.168,1.786-3.481C37.439,18.383,33.617,14.563,32.713,9.707z\"/>\r\n	    </symbol>\r\n		<symbol id=\"thunderstorm\">\r\n            <path d=\"M32.727,32.729c-0.287,0-0.665,0-1.086,0l3.666-4.513c3.254-1.081,5.602-4.146,5.602-7.761c0-4.52-3.662-8.181-8.182-8.181\r\n				c-1.638,0-3.153,0.491-4.432,1.32c-1.26-5.438-6.11-9.503-11.932-9.503c-6.777,0-12.272,5.495-12.272,12.273\r\n				c0,5.571,3.715,10.269,8.801,11.767l-1.38,3.864C4.843,29.928,0,23.713,0,16.365C0,7.328,7.327,0,16.363,0\r\n				c6.141,0,11.485,3.388,14.284,8.393c0.679-0.118,1.368-0.21,2.079-0.21C39.506,8.183,45,13.677,45,20.455\r\n				S39.504,32.729,32.727,32.729z M20.454,18.409H30.68l-6.136,10.229h7.159L18.408,45.001l3.682-12.272h-6.75L20.454,18.409z\"/>\r\n		</symbol>\r\n		<symbol id=\"hail\">\r\n            <path d=\"M43.085,36.384c-1.058,0-1.914-0.856-1.914-1.915c0-1.057,0.856-1.915,1.914-1.915S45,33.412,45,34.469\r\n				C45,35.527,44.143,36.384,43.085,36.384z M34.468,29.971v-4.195c2.287-1.325,3.83-3.793,3.83-6.626c0-4.23-3.429-7.66-7.659-7.66\r\n				c-1.533,0-2.953,0.46-4.15,1.236c-1.18-5.091-5.72-8.896-11.169-8.896c-6.346,0-11.49,5.144-11.49,11.489\r\n				c0,3.398,1.486,6.442,3.831,8.545v4.707C3.085,25.922,0,20.986,0,15.319C0,6.858,6.858,0,15.319,0\r\n				c5.749,0,10.753,3.171,13.372,7.855c0.636-0.109,1.28-0.197,1.947-0.197c6.345,0,11.488,5.146,11.488,11.491\r\n				C42.127,24.15,38.926,28.393,34.468,29.971z M2.873,37.342c1.057,0,1.915,0.857,1.915,1.915s-0.857,1.915-1.915,1.915\r\n				s-1.915-0.857-1.915-1.915C0.958,38.198,1.814,37.342,2.873,37.342z M12.446,21.064c0-1.057-0.1-1.915,0.958-1.915\r\n				c1.057,0,0.958,0.858,0.958,1.915v22.979h-1.916l0,0l0,0c0-2.115-1.714-3.83-3.829-3.83v-1.915c1.478,0,2.812,0.575,3.829,1.49\r\n				V21.064z M21.063,34.469c-1.057,0-0.958-0.856-0.958-1.915v-7.659c0-1.058-0.1-1.915,0.958-1.915c1.057,0,0.958,0.857,0.958,1.915\r\n				v7.659C22.021,33.612,22.12,34.469,21.063,34.469z M21.063,38.299c1.057,0,1.916,0.857,1.916,1.915s-0.859,1.915-1.916,1.915\r\n				c-1.057,0-1.915-0.857-1.915-1.915C19.148,39.155,20.006,38.299,21.063,38.299z M28.723,19.149c1.059,0,0.958,0.858,0.958,1.915\r\n				v17.252c1.746-2.331,4.523-3.848,7.659-3.848v1.915c-4.23,0-7.659,3.43-7.659,7.66h-1.915c0-0.261,0.02-0.518,0.039-0.772\r\n				c-0.051-0.319-0.039-0.712-0.039-1.143V21.064C27.766,20.008,27.666,19.149,28.723,19.149z\"/>\r\n		</symbol>\r\n\r\n\r\n        <symbol id=\"therm\">\r\n            <circle cx=\"2.5\" cy=\"13.5\" r=\"2.5\"/>\r\n		    <path d=\"M3.775,5.7C3.775,5,3.18,4,2.5,4l0,0C1.82,4,1.225,5,1.225,5.7v5.8c0,0.6,0.595,1.2,1.275,1.2l0,0\r\n				c0.8,0,1.275-0.5,1.275-1.2V5.7z\"/>\r\n	    </symbol>\r\n		<symbol id=\"uptri\">\r\n            <polygon points=\"0,6 3.5,0 7,6 \"/>\r\n        </symbol>\r\n    </defs>\r\n\r\n    <g> <!-- time/date -->\r\n        <text x=\"48\" y=\"28\" class=\"t36 b c\">";
  if (stack1 = helpers.current_time) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.current_time; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</text>\r\n        <text x=\"48\" y=\"44\" class=\"t18 c\">";
  if (stack1 = helpers.current_date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.current_date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</text>\r\n    </g>\r\n    ";
  stack1 = helpers['with'].call(depth0, depth0.buses, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n\r\n	";
  stack1 = helpers['with'].call(depth0, depth0.weather, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n</svg>\r\n";
  return buffer;
  });
})();
